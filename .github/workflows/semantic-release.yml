name: Semantic Release for Apps

on:
  push:
    branches:
      - master
    # paths:
    #   - 'modules/**'
permissions: write-all

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        id: checkout
        with:
          fetch-depth: 0

      # Get the folder path of changed file
      - name: Get changed directories
        id: changed_dirs
        run: |
          CHANGED_DIRS=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | awk -F/ 'BEGIN{OFS=FS} NF--')
          if [[ -z $CHANGED_DIRS ]]; then
            echo "::set-output name=dirs::"
          else
            echo "::set-output name=dirs::$CHANGED_DIRS"
          fi

      # Update the tag format to include the name of the directory
      - name: Update tag format
        id: update_tag_format
        run: |
          APP_DIRS="${{ steps.changed_dirs.outputs.dirs }}"
          if [[ -z $APP_DIRS ]]; then
            echo "::set-output name=tag_format::v\${version}"
          else
            APP_NAME=$(echo "$APP_DIRS" | awk '{print tolower($0)}')
            echo "::set-output name=tag_format::${APP_NAME}-v\${version}"
          fi

      # Determine the path to the CHANGELOG.md file
      - name: Determine CHANGELOG.md path
        id: changelog_path
        run: |
          APP_DIRS="${{ steps.changed_dirs.outputs.dirs }}"
          if [[ -z $APP_DIRS ]]; then
            echo "::set-output name=path::./CHANGELOG.md"
          else
            while IFS= read -r dir; do
              if [[ -f "${dir}/CHANGELOG.md" ]]; then
                echo "::set-output name=path::${dir}/CHANGELOG.md"
              fi
            done <<< "$APP_DIRS"
          fi

      # Run semantic release
      - name: Semantic Release
        uses: docker://ghcr.io/codfish/semantic-release-action:v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB2 }}
        with:
          tag_format: '${{ steps.update_tag_format.outputs.tag_format }}'
          additional_packages: |
            ['@semantic-release/changelog', '@semantic-release/git']
          plugins: |
            [
              '@semantic-release/commit-analyzer',
              '@semantic-release/release-notes-generator',
              ['@semantic-release/changelog', { "changelogFile": "${{ steps.changelog_path.outputs.path }}" }],
              '@semantic-release/github',
              ['@semantic-release/git', { "assets": ["${{ steps.changelog_path.outputs.path }}"] }]
            ]
          branches: |
            [
              'master'
            ]
        if: steps.changelog_path.outputs.path != ''

      - name: Semantic Release Output Summary
        id: semantic_summary
        run: |
          echo "### Semantic Version = ${{ steps.semantic.outputs.release-version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ toJson(steps.semantic.outputs) }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
        